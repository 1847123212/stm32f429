.TH "TM_RTC_Typedefs" 3 "Wed Mar 18 2015" "Version v1.0.0" "TM STM32F4xx Libraries" \" -*- nroff -*-
.ad l
.nh
.SH NAME
TM_RTC_Typedefs \- TM_RTC_Typedefs
.PP
Library Typedefs\&.  

.SS "Data Structures"

.in +1c
.ti -1c
.RI "struct \fBTM_RTC_t\fP"
.br
.RI "\fIRTC Struct for date/time\&. \fP"
.ti -1c
.RI "struct \fBTM_RTC_AlarmTime_t\fP"
.br
.RI "\fIRTC structure for alarm time\&. \fP"
.in -1c
.SS "Typedefs"

.in +1c
.ti -1c
.RI "typedef \fBTM_RTC_t\fP \fBTM_RTC_Time_t\fP"
.br
.RI "\fIBackward compatibility for RTC time\&. \fP"
.in -1c
.SS "Enumerations"

.in +1c
.ti -1c
.RI "enum \fBTM_RTC_Result_t\fP { \fBTM_RTC_Result_Ok\fP, \fBTM_RTC_Result_Error\fP }"
.br
.RI "\fIRTC Result enumeration\&. \fP"
.ti -1c
.RI "enum \fBTM_RTC_Format_t\fP { \fBTM_RTC_Format_BIN\fP = 0x00, \fBTM_RTC_Format_BCD\fP }"
.br
.RI "\fIRTC date and time format\&. \fP"
.ti -1c
.RI "enum \fBTM_RTC_Int_t\fP { \fBTM_RTC_Int_Disable\fP = 0x00, \fBTM_RTC_Int_60s\fP, \fBTM_RTC_Int_30s\fP, \fBTM_RTC_Int_15s\fP, \fBTM_RTC_Int_10s\fP, \fBTM_RTC_Int_5s\fP, \fBTM_RTC_Int_2s\fP, \fBTM_RTC_Int_1s\fP, \fBTM_RTC_Int_500ms\fP, \fBTM_RTC_Int_250ms\fP, \fBTM_RTC_Int_125ms\fP }"
.br
.RI "\fIRTC Interrupt enumeration\&. \fP"
.ti -1c
.RI "enum \fBTM_RTC_ClockSource_t\fP { \fBTM_RTC_ClockSource_Internal\fP = 0x00, \fBTM_RTC_ClockSource_External\fP }"
.br
.RI "\fISelect RTC clock source\&. \fP"
.ti -1c
.RI "enum \fBTM_RTC_AlarmType_t\fP { \fBTM_RTC_AlarmType_DayInWeek\fP, \fBTM_RTC_AlarmType_DayInMonth\fP }"
.br
.RI "\fIRTC Alarm type\&. \fP"
.ti -1c
.RI "enum \fBTM_RTC_Alarm_t\fP { \fBTM_RTC_Alarm_A\fP = 0x00, \fBTM_RTC_Alarm_B\fP }"
.br
.RI "\fIAlarm identifier you will use for Alarm functions\&. \fP"
.in -1c
.SH "Detailed Description"
.PP 
Library Typedefs\&. 


.SH "Enumeration Type Documentation"
.PP 
.SS "enum \fBTM_RTC_Alarm_t\fP"

.PP
Alarm identifier you will use for Alarm functions\&. 
.PP
\fBEnumerator\fP
.in +1c
.TP
\fB\fITM_RTC_Alarm_A \fP\fP
Work with alarm A 
.TP
\fB\fITM_RTC_Alarm_B \fP\fP
Work with alarm B 
.SS "enum \fBTM_RTC_AlarmType_t\fP"

.PP
RTC Alarm type\&. 
.PP
\fBEnumerator\fP
.in +1c
.TP
\fB\fITM_RTC_AlarmType_DayInWeek \fP\fP
Trigger alarm every day in a week, days from 1 to 7 (Monday to Sunday) 
.TP
\fB\fITM_RTC_AlarmType_DayInMonth \fP\fP
Trigger alarm every month 
.SS "enum \fBTM_RTC_ClockSource_t\fP"

.PP
Select RTC clock source\&. 
.PP
\fBNote:\fP
.RS 4
Internal clock is not accurate and should not be used in production 
.RE
.PP

.PP
\fBEnumerator\fP
.in +1c
.TP
\fB\fITM_RTC_ClockSource_Internal \fP\fP
Use internal clock source for RTC (LSI oscillator) 
.TP
\fB\fITM_RTC_ClockSource_External \fP\fP
Use external clock source for RTC (LSE oscillator) 
.SS "enum \fBTM_RTC_Format_t\fP"

.PP
RTC date and time format\&. 
.PP
\fBEnumerator\fP
.in +1c
.TP
\fB\fITM_RTC_Format_BIN \fP\fP
RTC data in binary format 
.TP
\fB\fITM_RTC_Format_BCD \fP\fP
RTC data in binary-coded decimal format 
.SS "enum \fBTM_RTC_Int_t\fP"

.PP
RTC Interrupt enumeration\&. 
.PP
\fBEnumerator\fP
.in +1c
.TP
\fB\fITM_RTC_Int_Disable \fP\fP
Disable RTC wakeup interrupts 
.TP
\fB\fITM_RTC_Int_60s \fP\fP
RTC Wakeup interrupt every 60 seconds 
.TP
\fB\fITM_RTC_Int_30s \fP\fP
RTC Wakeup interrupt every 30 seconds 
.TP
\fB\fITM_RTC_Int_15s \fP\fP
RTC Wakeup interrupt every 15 seconds 
.TP
\fB\fITM_RTC_Int_10s \fP\fP
RTC Wakeup interrupt every 10 seconds 
.TP
\fB\fITM_RTC_Int_5s \fP\fP
RTC Wakeup interrupt every 5 seconds 
.TP
\fB\fITM_RTC_Int_2s \fP\fP
RTC Wakeup interrupt every 2 seconds 
.TP
\fB\fITM_RTC_Int_1s \fP\fP
RTC Wakeup interrupt every 1 seconds 
.TP
\fB\fITM_RTC_Int_500ms \fP\fP
RTC Wakeup interrupt every 500 milliseconds 
.TP
\fB\fITM_RTC_Int_250ms \fP\fP
RTC Wakeup interrupt every 250 milliseconds 
.TP
\fB\fITM_RTC_Int_125ms \fP\fP
RTC Wakeup interrupt every 125 milliseconds 
.SS "enum \fBTM_RTC_Result_t\fP"

.PP
RTC Result enumeration\&. 
.PP
\fBEnumerator\fP
.in +1c
.TP
\fB\fITM_RTC_Result_Ok \fP\fP
Everything OK 
.TP
\fB\fITM_RTC_Result_Error \fP\fP
An error occured 
.SH "Author"
.PP 
Generated automatically by Doxygen for TM STM32F4xx Libraries from the source code\&.
