.TH "TM_USB_VCP_Settings_t" 3 "Wed Mar 18 2015" "Version v1.0.0" "TM STM32F4xx Libraries" \" -*- nroff -*-
.ad l
.nh
.SH NAME
TM_USB_VCP_Settings_t \- 
.SH SYNOPSIS
.br
.PP
.PP
\fC#include <tm_stm32f4_usb_vcp\&.h>\fP
.SS "Data Fields"

.in +1c
.ti -1c
.RI "uint32_t \fBBaudrate\fP"
.br
.ti -1c
.RI "uint8_t \fBStopbits\fP"
.br
.ti -1c
.RI "uint8_t \fBDataBits\fP"
.br
.ti -1c
.RI "uint8_t \fBParity\fP"
.br
.ti -1c
.RI "uint8_t \fBChanged\fP"
.br
.in -1c
.SH "Detailed Description"
.PP 
Structure for USART if you are working USB/UART converter with STM32F4xx
.PP
Parameters:
.IP "\(bu" 2
uint32_t Baudrate: Baudrate, which is set by user on terminal\&. Value is number of bits per second, for example: 115200
.IP "\(bu" 2
uint8_t Stopbits: Stop bits, which is set by user on terminal\&. Values:
.IP "  \(bu" 4
0: 1 stop bit
.IP "  \(bu" 4
1: 1\&.5 stop bits
.IP "  \(bu" 4
2: 2 stop bits
.PP

.IP "\(bu" 2
uint8_t DataBits: Data bits, which is set by user on terminal\&. Values:
.IP "  \(bu" 4
5: 5 data bits
.IP "  \(bu" 4
6: 6 data bits
.IP "  \(bu" 4
7: 7 data bits
.IP "  \(bu" 4
8: 8 data bits
.IP "  \(bu" 4
9: 9 data bits
.PP

.IP "\(bu" 2
uint8_t Parity: Parity, which is set by user on terminal\&. Values:
.IP "  \(bu" 4
0: No parity
.IP "  \(bu" 4
1: Odd parity
.IP "  \(bu" 4
2: Even parity
.IP "  \(bu" 4
3: Mark parity
.IP "  \(bu" 4
4: Space parity
.PP

.IP "\(bu" 2
uint8_t Changed: When you check for settings in my function, this will be set to 1 if user has changed parameters, so you can reinitialize USART peripheral if you need to\&. 
.PP


.SH "Author"
.PP 
Generated automatically by Doxygen for TM STM32F4xx Libraries from the source code\&.
