.TH "TM_GPS_Functions" 3 "Wed Mar 18 2015" "Version v1.0.0" "TM STM32F4xx Libraries" \" -*- nroff -*-
.ad l
.nh
.SH NAME
TM_GPS_Functions \- TM_GPS_Functions
.PP
Library Functions\&.  

.SS "Functions"

.in +1c
.ti -1c
.RI "void \fBTM_GPS_Init\fP (\fBTM_GPS_Data_t\fP *GPS_Data, uint32_t baudrate)"
.br
.RI "\fIInitializes GPS and USART peripheral\&. \fP"
.ti -1c
.RI "\fBTM_GPS_Result_t\fP \fBTM_GPS_Update\fP (\fBTM_GPS_Data_t\fP *GPS_Data)"
.br
.RI "\fIUpdate GPS data\&. \fP"
.ti -1c
.RI "float \fBTM_GPS_ConvertSpeed\fP (float SpeedInKnots, \fBTM_GPS_Speed_t\fP toSpeed)"
.br
.RI "\fIConverts speed in knots (from GPS) to user selectable speed\&. \fP"
.ti -1c
.RI "void \fBTM_GPS_ConvertFloat\fP (float num, \fBTM_GPS_Float_t\fP *Float_Data, uint8_t decimals)"
.br
.RI "\fIConverts float number into integer and decimal part\&. \fP"
.ti -1c
.RI "void \fBTM_GPS_DistanceBetween\fP (\fBTM_GPS_Distance_t\fP *Distance_Data)"
.br
.RI "\fICalculates distance between 2 coordinates on earth and bearing from start to end point in relation to the north\&. \fP"
.in -1c
.SH "Detailed Description"
.PP 
Library Functions\&. 


.SH "Function Documentation"
.PP 
.SS "void TM_GPS_ConvertFloat (float num, \fBTM_GPS_Float_t\fP * Float_Data, uint8_t decimals)"

.PP
Converts float number into integer and decimal part\&. 
.PP
\fBParameters:\fP
.RS 4
\fInum\fP Float number to split into 2 parts 
.br
\fI*Float_Data\fP Pointer to \fBTM_GPS_Float_t\fP structure where to save result 
.br
\fIdecimals\fP Number of decimal places for conversion 
.RE
.PP
\fBNote:\fP
.RS 4
Example: You have number 15\&.002 in float format\&.
.IP "\(bu" 2
You want to split this to integer and decimal part with 6 decimal places\&.
.IP "\(bu" 2
Call TM_GPS_ConvertFloat(15\&.002, &Float_Struct, 6);
.IP "\(bu" 2
Result will be: Integer: 15; Decimal: 2000 (0\&.002 * 10^6) 
.PP
.RE
.PP
\fBReturn values:\fP
.RS 4
\fINone\fP 
.RE
.PP

.SS "float TM_GPS_ConvertSpeed (float SpeedInKnots, \fBTM_GPS_Speed_t\fP toSpeed)"

.PP
Converts speed in knots (from GPS) to user selectable speed\&. 
.PP
\fBParameters:\fP
.RS 4
\fIspeedInKnots\fP float value from GPS module 
.br
\fItoSpeed\fP Select to which speed you want conversion from knot\&. This parameter ca be a value of TM_GPS_Speed_t enumeration\&. 
.RE
.PP
\fBReturn values:\fP
.RS 4
\fICalculated\fP speed from knots to user selectable format 
.RE
.PP

.SS "void TM_GPS_DistanceBetween (\fBTM_GPS_Distance_t\fP * Distance_Data)"

.PP
Calculates distance between 2 coordinates on earth and bearing from start to end point in relation to the north\&. 
.PP
\fBParameters:\fP
.RS 4
\fI*Distance_Data\fP Pointer to \fBTM_GPS_Distance_t\fP structure with latitude and longitude set values 
.RE
.PP
\fBNote:\fP
.RS 4
Calculation results will be saved in *Distance_Data \fBTM_GPS_Distance_t\fP structure 
.RE
.PP
\fBReturn values:\fP
.RS 4
\fINone\fP 
.RE
.PP

.SS "void TM_GPS_Init (\fBTM_GPS_Data_t\fP * GPS_Data, uint32_t baudrate)"

.PP
Initializes GPS and USART peripheral\&. 
.PP
\fBParameters:\fP
.RS 4
\fI*GPS_Data\fP Pointer to \fBTM_GPS_Data_t\fP structure to set default values 
.br
\fIbaudrate\fP Specify GPS baudrate for USART\&. Most common are 9600 or 115200 bauds 
.RE
.PP
\fBNote:\fP
.RS 4
GPS baudrate can have other values\&. Check GPS datasheet for proper info\&. 
.RE
.PP
\fBReturn values:\fP
.RS 4
\fINone\fP 
.RE
.PP

.SS "\fBTM_GPS_Result_t\fP TM_GPS_Update (\fBTM_GPS_Data_t\fP * GPS_Data)"

.PP
Update GPS data\&. Update GPS data\&. This function must be called periodically, as fast as possible\&. It basically checks if data is available on USART and parse it to useful value\&.
.PP
Parameters:
.IP "\(bu" 2
TM_GPS_Data_t* GPS_Data: Pointer to \fBTM_GPS_Data_t\fP struct variable
.PP
.PP
When you first call this function and there is not available data from GPS, this function will return \fBTM_GPS_Result_FirstTimeWaiting\fP\&. This will be returning all the time we don't have any useful data\&. When first time useful data is received from GPS (everything parsed), TM_GPS_Result_NewData will be returned\&. When we have already new data, next time we call this function, TM_GPS_Result_OldData will be returning until we don't receive new packet of useful data\&. 
.PP
\fBNote:\fP
.RS 4
This function must be called periodically, as fast as possible\&. It basically checks if data is available on GPS USART and parse it to useful data for user\&. 
.PP
- When you first call this function and there is not available data from GPS, this function will return \fBTM_GPS_Result_FirstTimeWaiting\fP\&.
.IP "\(bu" 2
This will be returning all the time we don't have any useful data\&.
.IP "\(bu" 2
When first time useful data is received from GPS (everything parsed), \fBTM_GPS_Result_NewData\fP will be returned\&.
.IP "\(bu" 2
When we have already new data, next time we call this function, \fBTM_GPS_Result_OldData\fP will be returning until we don't receive new packet of useful data\&. 
.PP
.PP
If you are making GPS logger, then when you receive \fBTM_GPS_Result_NewData\fP it is time to save your data\&. 
.RE
.PP
\fBParameters:\fP
.RS 4
\fI*GPS_Data\fP Pointer to working \fBTM_GPS_Data_t\fP structure 
.RE
.PP
\fBReturn values:\fP
.RS 4
\fIReturns\fP value of \fBTM_GPS_Result_t\fP structure 
.RE
.PP

.SH "Author"
.PP 
Generated automatically by Doxygen for TM STM32F4xx Libraries from the source code\&.
